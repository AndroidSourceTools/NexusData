buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    jcenter()
}

version = "0.1.2"
group = "com.github.dkharrat.nexusdata"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'com.google.code.gson:gson:2.2.4'
    androidTestCompile 'com.github.tony19:logback-android-core:1.1.1-3'
    androidTestCompile 'com.github.tony19:logback-android-classic:1.1.1-3'
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 21
        testApplicationId "com.github.dkharrat.nexusdata.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        task("generate${variant.name}Javadoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = "${android.plugin.sdkHandler.sdkFolder}/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            exclude '**/R.html', '**/R.*.html', '**/BuildConfig.java'
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives sourcesJar
}

if (project.hasProperty('signing')) {
    signing {
        required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}

if (project.hasProperty('sonatypeUsername')) {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: sonatypeRepo) {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'NexusData'
                packaging 'aar'
                description 'Core Data for Android'
                url 'https://github.com/dkharrat/NexusData'

                scm {
                    url 'scm:git@github.com:dkharrat/NexusData.git'
                    connection 'scm:git@github.com:dkharat/NexusData.git'
                    developerConnection 'scm:git@github.com:dkharrat/NexusData.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'dkharrat'
                        name 'Dia Kharrat'
                        email 'dkharrat@gmail.com'
                    }
                }
            }
        }
    }
}
